from __future__ import annotations
import omni.core._core
import typing
import usdrt.Gf._Gf
import usdrt.helpers._helpers
__all__: list[str] = ['ISharedXformCache', 'IXformCache']
class ISharedXformCache(_ISharedXformCache):
    @typing.overload
    def __init__(self, arg0: omni.core._core.IObject) -> None:
        ...
    @typing.overload
    def __init__(self) -> None:
        ...
    def clear(self: _ISharedXformCache) -> bool:
        ...
    def get_cache(self, stage_id: usdrt.helpers._helpers.UsdStageId) -> IXformCache:
        ...
    def get_or_create_cache(self, stage_id: usdrt.helpers._helpers.UsdStageId) -> IXformCache:
        ...
    def has_cache(self: _ISharedXformCache, stage_id: usdrt.helpers._helpers.UsdStageId) -> bool:
        ...
class IXformCache(_IXformCache):
    @typing.overload
    def __init__(self, arg0: omni.core._core.IObject) -> None:
        ...
    @typing.overload
    def __init__(self) -> None:
        ...
    def attach_to_stage(self: _IXformCache, stage_id: usdrt.helpers._helpers.UsdStageId) -> bool:
        ...
    def compute_world_xform(self: _IXformCache, path: usdrt.helpers._helpers.PathC) -> usdrt.Gf._Gf.Matrix4d:
        ...
    def get_latest_world_xform(self: _IXformCache, path: usdrt.helpers._helpers.PathC) -> usdrt.Gf._Gf.Matrix4d:
        ...
    def sync_targeted_xforms(self: _IXformCache, target_path: usdrt.helpers._helpers.PathC) -> None:
        ...
    def sync_xforms(self: _IXformCache) -> None:
        ...
    @property
    def stage_id(self) -> usdrt.helpers._helpers.UsdStageId:
        ...
class _ISharedXformCache(omni.core._core.IObject):
    pass
class _IXformCache(omni.core._core.IObject):
    pass
