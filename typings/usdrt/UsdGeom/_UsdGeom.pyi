from __future__ import annotations
import typing
import usdrt.Sdf._Sdf
import usdrt.Usd._Usd
__all__: list[str] = ['BasisCurves', 'Boundable', 'Camera', 'Capsule', 'Cone', 'Cube', 'Curves', 'Cylinder', 'Gprim', 'HermiteCurves', 'Imageable', 'Mesh', 'ModelAPI', 'MotionAPI', 'NurbsCurves', 'NurbsPatch', 'Plane', 'PointBased', 'PointInstancer', 'Points', 'Primvar', 'PrimvarsAPI', 'Scope', 'Sphere', 'Subset', 'Tokens', 'VisibilityAPI', 'Xform', 'XformCommonAPI', 'Xformable']
class BasisCurves(Curves):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> BasisCurves:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateBasisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateWrapAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBasisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetWrapAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Boundable(Xformable):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Camera(Xformable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Camera:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateClippingPlanesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateClippingRangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExposureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFStopAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFocalLengthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFocusDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHorizontalApertureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHorizontalApertureOffsetAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateProjectionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateShutterCloseAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateShutterOpenAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateStereoRoleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVerticalApertureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVerticalApertureOffsetAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetClippingPlanesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetClippingRangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExposureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFStopAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFocalLengthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFocusDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHorizontalApertureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHorizontalApertureOffsetAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetProjectionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetShutterCloseAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetShutterOpenAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetStereoRoleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVerticalApertureAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVerticalApertureOffsetAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Capsule(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Capsule:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Cone(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Cone:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Cube(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Cube:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSizeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSizeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Curves(PointBased):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateCurveVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateWidthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCurveVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetWidthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Cylinder(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Cylinder:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHeightAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Gprim(Boundable):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateDisplayColorAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDisplayOpacityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDoubleSidedAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateOrientationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDisplayColorAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDisplayOpacityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDoubleSidedAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetOrientationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class HermiteCurves(Curves):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> HermiteCurves:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateTangentsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTangentsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Imageable(usdrt.Usd._Usd.Typed):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateProxyPrimRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreatePurposeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetProxyPrimRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetPurposeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Mesh(PointBased):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Mesh:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateCornerIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateCornerSharpnessesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateCreaseIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateCreaseLengthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateCreaseSharpnessesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFaceVaryingLinearInterpolationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFaceVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFaceVertexIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateHoleIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateInterpolateBoundaryAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSubdivisionSchemeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTriangleSubdivisionRuleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCornerIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCornerSharpnessesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCreaseIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCreaseLengthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCreaseSharpnessesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFaceVaryingLinearInterpolationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFaceVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFaceVertexIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHoleIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetInterpolateBoundaryAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSubdivisionSchemeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTriangleSubdivisionRuleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class ModelAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> ModelAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateModelApplyDrawModeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardGeometryAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureXNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureXPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureYNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureYPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureZNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelCardTextureZPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelDrawModeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateModelDrawModeColorAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelApplyDrawModeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardGeometryAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureXNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureXPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureYNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureYPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureZNegAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelCardTextureZPosAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelDrawModeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetModelDrawModeColorAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class MotionAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> MotionAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateMotionBlurScaleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateNonlinearSampleCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVelocityScaleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMotionBlurScaleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetNonlinearSampleCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVelocityScaleAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class NurbsCurves(Curves):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> NurbsCurves:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRangesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRangesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class NurbsPatch(PointBased):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> NurbsPatch:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreatePointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurveCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurveKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurveOrdersAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurvePointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurveRangesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTrimCurveVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateURangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUVertexCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVRangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVVertexCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurveCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurveKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurveOrdersAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurvePointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurveRangesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTrimCurveVertexCountsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetURangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUVertexCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVFormAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVKnotsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVRangeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVVertexCountAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Plane(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Plane:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDoubleSidedAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLengthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateWidthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDoubleSidedAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLengthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetWidthAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class PointBased(Gprim):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAccelerationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateNormalsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAccelerationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetNormalsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class PointInstancer(Boundable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> PointInstancer:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAccelerationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateAngularVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateInvisibleIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateOrientationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePositionsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateProtoIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePrototypesRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateScalesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAccelerationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAngularVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetInvisibleIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetOrientationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPositionsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetProtoIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPrototypesRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetScalesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVelocitiesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Points(PointBased):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Points:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateWidthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetIdsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetWidthsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Primvar:
    @staticmethod
    def IsPrimvar(attr: usdrt.Usd._Usd.Attribute) -> bool:
        ...
    @staticmethod
    def IsValidInterpolation(interpolation: TfToken) -> bool:
        ...
    @staticmethod
    def IsValidInterpolationName(name: TfToken) -> bool:
        ...
    @staticmethod
    def IsValidPrimvarName(name: TfToken) -> bool:
        ...
    @staticmethod
    def StripInterpolationName(name: TfToken) -> TfToken:
        ...
    @staticmethod
    def StripPrimvarsName(name: TfToken) -> TfToken:
        ...
    def Get(self, time: usdrt.Usd._Usd.TimeCode = ...) -> typing.Any:
        ...
    def GetAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetInterpolation(self) -> TfToken:
        ...
    def GetName(self) -> TfToken:
        ...
    def HasAuthoredInterpolation(self) -> bool:
        ...
    def HasAuthoredValue(self) -> bool:
        ...
    def HasValue(self) -> bool:
        ...
    def IsDefined(self) -> bool:
        ...
    def Set(self, value: typing.Any, time: usdrt.Usd._Usd.TimeCode = ...) -> bool:
        ...
    def SetInterpolation(self, interpolation: TfToken) -> bool:
        ...
    @typing.overload
    def __init__(self) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Attribute) -> None:
        ...
class PrimvarsAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def CanContainPropertyName(name: TfToken) -> bool:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreatePrimvar(self, name: TfToken, typeName: usdrt.Sdf._Sdf.ValueTypeName, interpolation: TfToken = '') -> Primvar:
        ...
    def FindIncrementallyInheritablePrimvars(self, inheritedFromAncestors: list[Primvar]) -> list[Primvar]:
        ...
    def FindInheritablePrimvars(self) -> list[Primvar]:
        ...
    def FindInheritedPrimvar(self, arg0: TfToken) -> Primvar:
        ...
    def FindInheritedPrimvars(self) -> list[Primvar]:
        ...
    @typing.overload
    def FindPrimvarWithInheritance(self, arg0: TfToken) -> Primvar:
        ...
    @typing.overload
    def FindPrimvarWithInheritance(self, arg0: TfToken, arg1: list[Primvar]) -> Primvar:
        ...
    @typing.overload
    def FindPrimvarsWithInheritance(self) -> list[Primvar]:
        ...
    @typing.overload
    def FindPrimvarsWithInheritance(self, arg0: list[Primvar]) -> list[Primvar]:
        ...
    def GetAuthoredPrimvars(self) -> list[Primvar]:
        ...
    def GetPrimvar(self, arg0: TfToken) -> Primvar:
        ...
    def GetPrimvars(self) -> list[Primvar]:
        ...
    def GetPrimvarsWithAuthoredValues(self) -> list[Primvar]:
        ...
    def GetPrimvarsWithValues(self) -> list[Primvar]:
        ...
    def HasPossiblyInheritedPrimvar(self, name: TfToken) -> bool:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Scope(Imageable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Scope:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Sphere(Gprim):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Sphere:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExtentAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRadiusAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Subset(usdrt.Usd._Usd.Typed):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Subset:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateElementTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateFamilyNameAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetElementTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFamilyNameAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Tokens:
    accelerations: typing.ClassVar[str] = 'accelerations'
    all: typing.ClassVar[str] = 'all'
    angularVelocities: typing.ClassVar[str] = 'angularVelocities'
    axis: typing.ClassVar[str] = 'axis'
    basis: typing.ClassVar[str] = 'basis'
    bezier: typing.ClassVar[str] = 'bezier'
    bilinear: typing.ClassVar[str] = 'bilinear'
    boundaries: typing.ClassVar[str] = 'boundaries'
    bounds: typing.ClassVar[str] = 'bounds'
    box: typing.ClassVar[str] = 'box'
    bspline: typing.ClassVar[str] = 'bspline'
    cards: typing.ClassVar[str] = 'cards'
    catmullClark: typing.ClassVar[str] = 'catmullClark'
    catmullRom: typing.ClassVar[str] = 'catmullRom'
    clippingPlanes: typing.ClassVar[str] = 'clippingPlanes'
    clippingRange: typing.ClassVar[str] = 'clippingRange'
    closed: typing.ClassVar[str] = 'closed'
    constant: typing.ClassVar[str] = 'constant'
    cornerIndices: typing.ClassVar[str] = 'cornerIndices'
    cornerSharpnesses: typing.ClassVar[str] = 'cornerSharpnesses'
    cornersOnly: typing.ClassVar[str] = 'cornersOnly'
    cornersPlus1: typing.ClassVar[str] = 'cornersPlus1'
    cornersPlus2: typing.ClassVar[str] = 'cornersPlus2'
    creaseIndices: typing.ClassVar[str] = 'creaseIndices'
    creaseLengths: typing.ClassVar[str] = 'creaseLengths'
    creaseSharpnesses: typing.ClassVar[str] = 'creaseSharpnesses'
    cross: typing.ClassVar[str] = 'cross'
    cubic: typing.ClassVar[str] = 'cubic'
    curveVertexCounts: typing.ClassVar[str] = 'curveVertexCounts'
    default_: typing.ClassVar[str] = 'default'
    doubleSided: typing.ClassVar[str] = 'doubleSided'
    edgeAndCorner: typing.ClassVar[str] = 'edgeAndCorner'
    edgeOnly: typing.ClassVar[str] = 'edgeOnly'
    elementSize: typing.ClassVar[str] = 'elementSize'
    elementType: typing.ClassVar[str] = 'elementType'
    exposure: typing.ClassVar[str] = 'exposure'
    extent: typing.ClassVar[str] = 'extent'
    extentsHint: typing.ClassVar[str] = 'extentsHint'
    fStop: typing.ClassVar[str] = 'fStop'
    face: typing.ClassVar[str] = 'face'
    faceVarying: typing.ClassVar[str] = 'faceVarying'
    faceVaryingLinearInterpolation: typing.ClassVar[str] = 'faceVaryingLinearInterpolation'
    faceVertexCounts: typing.ClassVar[str] = 'faceVertexCounts'
    faceVertexIndices: typing.ClassVar[str] = 'faceVertexIndices'
    familyName: typing.ClassVar[str] = 'familyName'
    focalLength: typing.ClassVar[str] = 'focalLength'
    focusDistance: typing.ClassVar[str] = 'focusDistance'
    form: typing.ClassVar[str] = 'form'
    fromTexture: typing.ClassVar[str] = 'fromTexture'
    guide: typing.ClassVar[str] = 'guide'
    guideVisibility: typing.ClassVar[str] = 'guideVisibility'
    height: typing.ClassVar[str] = 'height'
    hermite: typing.ClassVar[str] = 'hermite'
    holeIndices: typing.ClassVar[str] = 'holeIndices'
    horizontalAperture: typing.ClassVar[str] = 'horizontalAperture'
    horizontalApertureOffset: typing.ClassVar[str] = 'horizontalApertureOffset'
    ids: typing.ClassVar[str] = 'ids'
    inactiveIds: typing.ClassVar[str] = 'inactiveIds'
    indices: typing.ClassVar[str] = 'indices'
    inherited: typing.ClassVar[str] = 'inherited'
    interpolateBoundary: typing.ClassVar[str] = 'interpolateBoundary'
    interpolation: typing.ClassVar[str] = 'interpolation'
    invisible: typing.ClassVar[str] = 'invisible'
    invisibleIds: typing.ClassVar[str] = 'invisibleIds'
    knots: typing.ClassVar[str] = 'knots'
    left: typing.ClassVar[str] = 'left'
    leftHanded: typing.ClassVar[str] = 'leftHanded'
    length: typing.ClassVar[str] = 'length'
    linear: typing.ClassVar[str] = 'linear'
    loop: typing.ClassVar[str] = 'loop'
    metersPerUnit: typing.ClassVar[str] = 'metersPerUnit'
    modelApplyDrawMode: typing.ClassVar[str] = 'model:applyDrawMode'
    modelCardGeometry: typing.ClassVar[str] = 'model:cardGeometry'
    modelCardTextureXNeg: typing.ClassVar[str] = 'model:cardTextureXNeg'
    modelCardTextureXPos: typing.ClassVar[str] = 'model:cardTextureXPos'
    modelCardTextureYNeg: typing.ClassVar[str] = 'model:cardTextureYNeg'
    modelCardTextureYPos: typing.ClassVar[str] = 'model:cardTextureYPos'
    modelCardTextureZNeg: typing.ClassVar[str] = 'model:cardTextureZNeg'
    modelCardTextureZPos: typing.ClassVar[str] = 'model:cardTextureZPos'
    modelDrawMode: typing.ClassVar[str] = 'model:drawMode'
    modelDrawModeColor: typing.ClassVar[str] = 'model:drawModeColor'
    mono: typing.ClassVar[str] = 'mono'
    motionBlurScale: typing.ClassVar[str] = 'motion:blurScale'
    motionNonlinearSampleCount: typing.ClassVar[str] = 'motion:nonlinearSampleCount'
    motionVelocityScale: typing.ClassVar[str] = 'motion:velocityScale'
    nonOverlapping: typing.ClassVar[str] = 'nonOverlapping'
    none: typing.ClassVar[str] = 'none'
    nonperiodic: typing.ClassVar[str] = 'nonperiodic'
    normals: typing.ClassVar[str] = 'normals'
    open: typing.ClassVar[str] = 'open'
    order: typing.ClassVar[str] = 'order'
    orientation: typing.ClassVar[str] = 'orientation'
    orientations: typing.ClassVar[str] = 'orientations'
    origin: typing.ClassVar[str] = 'origin'
    orthographic: typing.ClassVar[str] = 'orthographic'
    partition: typing.ClassVar[str] = 'partition'
    periodic: typing.ClassVar[str] = 'periodic'
    perspective: typing.ClassVar[str] = 'perspective'
    pinned: typing.ClassVar[str] = 'pinned'
    pivot: typing.ClassVar[str] = 'pivot'
    pointWeights: typing.ClassVar[str] = 'pointWeights'
    points: typing.ClassVar[str] = 'points'
    positions: typing.ClassVar[str] = 'positions'
    power: typing.ClassVar[str] = 'power'
    primvarsDisplayColor: typing.ClassVar[str] = 'primvars:displayColor'
    primvarsDisplayOpacity: typing.ClassVar[str] = 'primvars:displayOpacity'
    projection: typing.ClassVar[str] = 'projection'
    protoIndices: typing.ClassVar[str] = 'protoIndices'
    prototypes: typing.ClassVar[str] = 'prototypes'
    proxy: typing.ClassVar[str] = 'proxy'
    proxyPrim: typing.ClassVar[str] = 'proxyPrim'
    proxyVisibility: typing.ClassVar[str] = 'proxyVisibility'
    purpose: typing.ClassVar[str] = 'purpose'
    radius: typing.ClassVar[str] = 'radius'
    ranges: typing.ClassVar[str] = 'ranges'
    render: typing.ClassVar[str] = 'render'
    renderVisibility: typing.ClassVar[str] = 'renderVisibility'
    right: typing.ClassVar[str] = 'right'
    rightHanded: typing.ClassVar[str] = 'rightHanded'
    scales: typing.ClassVar[str] = 'scales'
    shutterClose: typing.ClassVar[str] = 'shutter:close'
    shutterOpen: typing.ClassVar[str] = 'shutter:open'
    size: typing.ClassVar[str] = 'size'
    smooth: typing.ClassVar[str] = 'smooth'
    stereoRole: typing.ClassVar[str] = 'stereoRole'
    subdivisionScheme: typing.ClassVar[str] = 'subdivisionScheme'
    tangents: typing.ClassVar[str] = 'tangents'
    triangleSubdivisionRule: typing.ClassVar[str] = 'triangleSubdivisionRule'
    trimCurveCounts: typing.ClassVar[str] = 'trimCurve:counts'
    trimCurveKnots: typing.ClassVar[str] = 'trimCurve:knots'
    trimCurveOrders: typing.ClassVar[str] = 'trimCurve:orders'
    trimCurvePoints: typing.ClassVar[str] = 'trimCurve:points'
    trimCurveRanges: typing.ClassVar[str] = 'trimCurve:ranges'
    trimCurveVertexCounts: typing.ClassVar[str] = 'trimCurve:vertexCounts'
    type: typing.ClassVar[str] = 'type'
    uForm: typing.ClassVar[str] = 'uForm'
    uKnots: typing.ClassVar[str] = 'uKnots'
    uOrder: typing.ClassVar[str] = 'uOrder'
    uRange: typing.ClassVar[str] = 'uRange'
    uVertexCount: typing.ClassVar[str] = 'uVertexCount'
    unauthoredValuesIndex: typing.ClassVar[str] = 'unauthoredValuesIndex'
    uniform: typing.ClassVar[str] = 'uniform'
    unrestricted: typing.ClassVar[str] = 'unrestricted'
    upAxis: typing.ClassVar[str] = 'upAxis'
    vForm: typing.ClassVar[str] = 'vForm'
    vKnots: typing.ClassVar[str] = 'vKnots'
    vOrder: typing.ClassVar[str] = 'vOrder'
    vRange: typing.ClassVar[str] = 'vRange'
    vVertexCount: typing.ClassVar[str] = 'vVertexCount'
    varying: typing.ClassVar[str] = 'varying'
    velocities: typing.ClassVar[str] = 'velocities'
    vertex: typing.ClassVar[str] = 'vertex'
    verticalAperture: typing.ClassVar[str] = 'verticalAperture'
    verticalApertureOffset: typing.ClassVar[str] = 'verticalApertureOffset'
    visibility: typing.ClassVar[str] = 'visibility'
    visible: typing.ClassVar[str] = 'visible'
    width: typing.ClassVar[str] = 'width'
    widths: typing.ClassVar[str] = 'widths'
    wrap: typing.ClassVar[str] = 'wrap'
    x: typing.ClassVar[str] = 'X'
    xformOpOrder: typing.ClassVar[str] = 'xformOpOrder'
    y: typing.ClassVar[str] = 'Y'
    z: typing.ClassVar[str] = 'Z'
class VisibilityAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> VisibilityAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateGuideVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateProxyVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRenderVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetGuideVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetProxyVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRenderVisibilityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Xform(Xformable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Xform:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class XformCommonAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Xformable(Imageable):
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateXformOpOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetXformOpOrderAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
