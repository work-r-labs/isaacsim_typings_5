from __future__ import annotations
import typing
import usdrt.Sdf._Sdf
import usdrt.Usd._Usd
import usdrt.UsdGeom._UsdGeom
__all__: list[str] = ['Animation', 'BindingAPI', 'BlendShape', 'PackedJointAnimation', 'Root', 'Skeleton', 'Tokens']
class Animation(usdrt.Usd._Usd.Typed):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Animation:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateBlendShapeWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateBlendShapesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRotationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateScalesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTranslationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBlendShapeWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBlendShapesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRotationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetScalesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTranslationsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class BindingAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> BindingAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAnimationSourceRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateBlendShapeTargetsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateBlendShapesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateGeomBindTransformAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSkeletonRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateSkinningBlendWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSkinningMethodAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAnimationSourceRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetBlendShapeTargetsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetBlendShapesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetGeomBindTransformAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSkeletonRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetSkinningBlendWeightsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSkinningMethodAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class BlendShape(usdrt.Usd._Usd.Typed):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> BlendShape:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateNormalOffsetsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateOffsetsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePointIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetNormalOffsetsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetOffsetsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPointIndicesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class PackedJointAnimation(Animation):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> PackedJointAnimation:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Root(usdrt.UsdGeom._UsdGeom.Boundable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Root:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Skeleton(usdrt.UsdGeom._UsdGeom.Boundable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Skeleton:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateBindTransformsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointNamesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRestTransformsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBindTransformsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointNamesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRestTransformsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Tokens:
    bindTransforms: typing.ClassVar[str] = 'bindTransforms'
    blendShapeWeights: typing.ClassVar[str] = 'blendShapeWeights'
    blendShapes: typing.ClassVar[str] = 'blendShapes'
    classicLinear: typing.ClassVar[str] = 'ClassicLinear'
    dualQuaternion: typing.ClassVar[str] = 'DualQuaternion'
    jointNames: typing.ClassVar[str] = 'jointNames'
    joints: typing.ClassVar[str] = 'joints'
    normalOffsets: typing.ClassVar[str] = 'normalOffsets'
    offsets: typing.ClassVar[str] = 'offsets'
    pointIndices: typing.ClassVar[str] = 'pointIndices'
    primvarsSkelGeomBindTransform: typing.ClassVar[str] = 'primvars:skel:geomBindTransform'
    primvarsSkelJointIndices: typing.ClassVar[str] = 'primvars:skel:jointIndices'
    primvarsSkelJointWeights: typing.ClassVar[str] = 'primvars:skel:jointWeights'
    primvarsSkelSkinningBlendWeights: typing.ClassVar[str] = 'primvars:skel:skinningBlendWeights'
    restTransforms: typing.ClassVar[str] = 'restTransforms'
    rotations: typing.ClassVar[str] = 'rotations'
    scales: typing.ClassVar[str] = 'scales'
    skelAnimationSource: typing.ClassVar[str] = 'skel:animationSource'
    skelBlendShapeTargets: typing.ClassVar[str] = 'skel:blendShapeTargets'
    skelBlendShapes: typing.ClassVar[str] = 'skel:blendShapes'
    skelJoints: typing.ClassVar[str] = 'skel:joints'
    skelSkeleton: typing.ClassVar[str] = 'skel:skeleton'
    skelSkinningMethod: typing.ClassVar[str] = 'skel:skinningMethod'
    translations: typing.ClassVar[str] = 'translations'
    weight: typing.ClassVar[str] = 'weight'
    weightedBlend: typing.ClassVar[str] = 'WeightedBlend'
