from __future__ import annotations
import typing
import usdrt.Sdf._Sdf
import usdrt.Usd._Usd
import usdrt.UsdGeom._UsdGeom
__all__: list[str] = ['ArticulationRootAPI', 'CollisionAPI', 'CollisionGroup', 'DistanceJoint', 'DriveAPI', 'FilteredPairsAPI', 'FixedJoint', 'Joint', 'LimitAPI', 'MassAPI', 'MaterialAPI', 'MeshCollisionAPI', 'PrismaticJoint', 'RevoluteJoint', 'RigidBodyAPI', 'Scene', 'SphericalJoint', 'Tokens']
class ArticulationRootAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> ArticulationRootAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class CollisionAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> CollisionAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateCollisionEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSimulationOwnerRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetCollisionEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSimulationOwnerRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class CollisionGroup(usdrt.Usd._Usd.Typed):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> CollisionGroup:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateFilteredGroupsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateInvertFilteredGroupsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateMergeGroupNameAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetFilteredGroupsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetInvertFilteredGroupsAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMergeGroupNameAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class DistanceJoint(Joint):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> DistanceJoint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateMaxDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateMinDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMaxDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMinDistanceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class DriveAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim, name: TfToken) -> DriveAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateDampingAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateMaxForceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateStiffnessAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTargetPositionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTargetVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDampingAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMaxForceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetName(self) -> TfToken:
        ...
    def GetStiffnessAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTargetPositionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTargetVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetTypeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim, arg1: TfToken) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase, arg1: TfToken) -> None:
        ...
    def __repr__(self) -> str:
        ...
class FilteredPairsAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> FilteredPairsAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateFilteredPairsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetFilteredPairsRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class FixedJoint(Joint):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> FixedJoint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Joint(usdrt.UsdGeom._UsdGeom.Imageable):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Joint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateBody0Rel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateBody1Rel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateBreakForceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateBreakTorqueAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateCollisionEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateExcludeFromArticulationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateJointEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLocalPos0Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLocalPos1Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLocalRot0Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLocalRot1Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBody0Rel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetBody1Rel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetBreakForceAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetBreakTorqueAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCollisionEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetExcludeFromArticulationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetJointEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLocalPos0Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLocalPos1Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLocalRot0Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLocalRot1Attr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class LimitAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim, name: TfToken) -> LimitAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateHighAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLowAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetHighAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLowAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetName(self) -> TfToken:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim, arg1: TfToken) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase, arg1: TfToken) -> None:
        ...
    def __repr__(self) -> str:
        ...
class MassAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> MassAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateCenterOfMassAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDensityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDiagonalInertiaAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateMassAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreatePrincipalAxesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetCenterOfMassAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDensityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDiagonalInertiaAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetMassAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetPrincipalAxesAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class MaterialAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> MaterialAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateDensityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateDynamicFrictionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRestitutionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateStaticFrictionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDensityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetDynamicFrictionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRestitutionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetStaticFrictionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class MeshCollisionAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> MeshCollisionAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateApproximationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetApproximationAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class PrismaticJoint(Joint):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> PrismaticJoint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLowerLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUpperLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLowerLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUpperLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class RevoluteJoint(Joint):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> RevoluteJoint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateLowerLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateUpperLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetLowerLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetUpperLimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class RigidBodyAPI(usdrt.Usd._Usd.APISchemaBase):
    @staticmethod
    def Apply(prim: usdrt.Usd._Usd.Prim) -> RigidBodyAPI:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAngularVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateKinematicEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateRigidBodyEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateSimulationOwnerRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def CreateStartsAsleepAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAngularVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetKinematicEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetRigidBodyEnabledAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetSimulationOwnerRel(self) -> usdrt.Usd._Usd.Relationship:
        ...
    def GetStartsAsleepAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetVelocityAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Scene(usdrt.Usd._Usd.Typed):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> Scene:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateGravityDirectionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateGravityMagnitudeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetGravityDirectionAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetGravityMagnitudeAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class SphericalJoint(Joint):
    @staticmethod
    def Define(stage: usdrt.Usd._Usd.Stage, path: usdrt.Sdf._Sdf.Path) -> SphericalJoint:
        ...
    @staticmethod
    def GetSchemaTypeName() -> TfToken:
        ...
    def CreateAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateConeAngle0LimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def CreateConeAngle1LimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetAxisAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetConeAngle0LimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def GetConeAngle1LimitAttr(self) -> usdrt.Usd._Usd.Attribute:
        ...
    def __bool__(self) -> bool:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.Prim) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: usdrt.Usd._Usd.SchemaBase) -> None:
        ...
    def __repr__(self) -> str:
        ...
class Tokens:
    acceleration: typing.ClassVar[str] = 'acceleration'
    angular: typing.ClassVar[str] = 'angular'
    boundingCube: typing.ClassVar[str] = 'boundingCube'
    boundingSphere: typing.ClassVar[str] = 'boundingSphere'
    colliders: typing.ClassVar[str] = 'colliders'
    convexDecomposition: typing.ClassVar[str] = 'convexDecomposition'
    convexHull: typing.ClassVar[str] = 'convexHull'
    distance: typing.ClassVar[str] = 'distance'
    drive: typing.ClassVar[str] = 'drive'
    force: typing.ClassVar[str] = 'force'
    kilogramsPerUnit: typing.ClassVar[str] = 'kilogramsPerUnit'
    limit: typing.ClassVar[str] = 'limit'
    linear: typing.ClassVar[str] = 'linear'
    meshSimplification: typing.ClassVar[str] = 'meshSimplification'
    none: typing.ClassVar[str] = 'none'
    physicsAngularVelocity: typing.ClassVar[str] = 'physics:angularVelocity'
    physicsApproximation: typing.ClassVar[str] = 'physics:approximation'
    physicsAxis: typing.ClassVar[str] = 'physics:axis'
    physicsBody0: typing.ClassVar[str] = 'physics:body0'
    physicsBody1: typing.ClassVar[str] = 'physics:body1'
    physicsBreakForce: typing.ClassVar[str] = 'physics:breakForce'
    physicsBreakTorque: typing.ClassVar[str] = 'physics:breakTorque'
    physicsCenterOfMass: typing.ClassVar[str] = 'physics:centerOfMass'
    physicsCollisionEnabled: typing.ClassVar[str] = 'physics:collisionEnabled'
    physicsConeAngle0Limit: typing.ClassVar[str] = 'physics:coneAngle0Limit'
    physicsConeAngle1Limit: typing.ClassVar[str] = 'physics:coneAngle1Limit'
    physicsDamping: typing.ClassVar[str] = 'physics:damping'
    physicsDensity: typing.ClassVar[str] = 'physics:density'
    physicsDiagonalInertia: typing.ClassVar[str] = 'physics:diagonalInertia'
    physicsDynamicFriction: typing.ClassVar[str] = 'physics:dynamicFriction'
    physicsExcludeFromArticulation: typing.ClassVar[str] = 'physics:excludeFromArticulation'
    physicsFilteredGroups: typing.ClassVar[str] = 'physics:filteredGroups'
    physicsFilteredPairs: typing.ClassVar[str] = 'physics:filteredPairs'
    physicsGravityDirection: typing.ClassVar[str] = 'physics:gravityDirection'
    physicsGravityMagnitude: typing.ClassVar[str] = 'physics:gravityMagnitude'
    physicsHigh: typing.ClassVar[str] = 'physics:high'
    physicsInvertFilteredGroups: typing.ClassVar[str] = 'physics:invertFilteredGroups'
    physicsJointEnabled: typing.ClassVar[str] = 'physics:jointEnabled'
    physicsKinematicEnabled: typing.ClassVar[str] = 'physics:kinematicEnabled'
    physicsLocalPos0: typing.ClassVar[str] = 'physics:localPos0'
    physicsLocalPos1: typing.ClassVar[str] = 'physics:localPos1'
    physicsLocalRot0: typing.ClassVar[str] = 'physics:localRot0'
    physicsLocalRot1: typing.ClassVar[str] = 'physics:localRot1'
    physicsLow: typing.ClassVar[str] = 'physics:low'
    physicsLowerLimit: typing.ClassVar[str] = 'physics:lowerLimit'
    physicsMass: typing.ClassVar[str] = 'physics:mass'
    physicsMaxDistance: typing.ClassVar[str] = 'physics:maxDistance'
    physicsMaxForce: typing.ClassVar[str] = 'physics:maxForce'
    physicsMergeGroup: typing.ClassVar[str] = 'physics:mergeGroup'
    physicsMinDistance: typing.ClassVar[str] = 'physics:minDistance'
    physicsPrincipalAxes: typing.ClassVar[str] = 'physics:principalAxes'
    physicsRestitution: typing.ClassVar[str] = 'physics:restitution'
    physicsRigidBodyEnabled: typing.ClassVar[str] = 'physics:rigidBodyEnabled'
    physicsSimulationOwner: typing.ClassVar[str] = 'physics:simulationOwner'
    physicsStartsAsleep: typing.ClassVar[str] = 'physics:startsAsleep'
    physicsStaticFriction: typing.ClassVar[str] = 'physics:staticFriction'
    physicsStiffness: typing.ClassVar[str] = 'physics:stiffness'
    physicsTargetPosition: typing.ClassVar[str] = 'physics:targetPosition'
    physicsTargetVelocity: typing.ClassVar[str] = 'physics:targetVelocity'
    physicsType: typing.ClassVar[str] = 'physics:type'
    physicsUpperLimit: typing.ClassVar[str] = 'physics:upperLimit'
    physicsVelocity: typing.ClassVar[str] = 'physics:velocity'
    rotX: typing.ClassVar[str] = 'rotX'
    rotY: typing.ClassVar[str] = 'rotY'
    rotZ: typing.ClassVar[str] = 'rotZ'
    transX: typing.ClassVar[str] = 'transX'
    transY: typing.ClassVar[str] = 'transY'
    transZ: typing.ClassVar[str] = 'transZ'
    x: typing.ClassVar[str] = 'X'
    y: typing.ClassVar[str] = 'Y'
    z: typing.ClassVar[str] = 'Z'
