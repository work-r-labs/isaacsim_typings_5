from __future__ import annotations
from omni import client
import omni.client.impl._omniclient
import os as os
from os import stat_result
import pathlib as pathlib
__all__: list[str] = ['client', 'containing_folder', 'create_folder', 'delete', 'exists', 'filename_from_path', 'get_mtime', 'get_size', 'is_file', 'is_folder', 'is_omni_path', 'isabs', 'join', 'list_files', 'os', 'pathlib', 'read', 'read_str', 'rename', 'split_filename', 'stat', 'stat_result', 'write', 'write_str']
def _stat(path: str) -> omni.client.impl._omniclient.ListEntry:
    ...
def containing_folder(path: str) -> str:
    ...
def create_folder(path: str) -> None:
    ...
def delete(path: str) -> None:
    ...
def exists(path: str) -> bool:
    ...
def filename_from_path(path: str) -> str:
    ...
def get_mtime(path: str) -> int:
    ...
def get_size(path: str) -> int:
    ...
def is_file(path: str) -> bool:
    ...
def is_folder(path: str) -> bool:
    ...
def is_omni_path(path: str) -> bool:
    ...
def isabs(path: str) -> bool:
    ...
def join(left: str, right: str) -> str:
    ...
def list_files(path: str) -> typing.List[str]:
    ...
def read(path: str) -> bytearray:
    ...
def read_str(path: str) -> str:
    ...
def rename(path: str, new_name: str) -> None:
    ...
def split_filename(filename: str) -> typing.Tuple[str, str]:
    ...
def stat(path: str) -> os.stat_result:
    ...
def write(path: str, data: bytearray) -> None:
    ...
def write_str(path: str, data: str):
    ...
