from __future__ import annotations
import carb as carb
from omni.kit.material.library import material_config_utils
from omni import ui
import omni.ui._ui
import omni.ui.color_utils
import os as os
import typing
__all__: list[str] = ['EditableListItem', 'EditableListItemDelegate', 'EditableListModel', 'EditableListWidget', 'carb', 'cl', 'material_config_utils', 'os', 'ui']
class EditableListItem(omni.ui._ui.AbstractItem):
    def __init__(self, text):
        ...
class EditableListItemDelegate(omni.ui._ui.AbstractItemDelegate):
    _DELETE_BUTTON_STYLE: typing.ClassVar[dict]  # value = {'margin': 2, 'padding': 0, '': {'image_url': '', 'alignment': <Alignment.CENTER: 72>, 'background_color': 0}, ':hovered': {'image_url': 'resources/glyphs/trash.svg', 'color': 4291611852, 'background_color': 0}, ':selected': {'image_url': 'resources/glyphs/trash.svg', 'color': 4291611852, 'background_color': 0}}
    _ITEM_LABEL_STYLE: typing.ClassVar[dict] = {'margin': 3, 'font_size': 16.0, ':selected': {'color': 4281545523}}
    def build_widget(self, model, item, column_id, level, expanded):
        ...
    def on_button_clicked(self, item, model):
        ...
    def on_field_end_edit(self, model, field, label):
        ...
    def on_label_double_click(self, mouse_button, field, label):
        ...
class EditableListModel(omni.ui._ui.AbstractItemModel):
    def __init__(self, item_class = EditableListItem, setting_path = None):
        ...
    def add_entry(self, text):
        ...
    def drop(self, target_item, source, drop_location = -1):
        ...
    def drop_accepted(self, target_item, source, drop_location = 1):
        ...
    def get_drag_mime_data(self, item):
        ...
    def get_item_children(self, item):
        ...
    def get_item_value_model(self, item, column_id):
        ...
    def get_item_value_model_count(self, item):
        ...
    def populate_items(self):
        ...
    def remove_item(self, item):
        ...
    def save_entries_to_settings(self):
        ...
    def save_to_material_config_file(self):
        ...
class EditableListWidget(omni.ui._ui.Widget):
    _ADD_BUTTON_STYLE: typing.ClassVar[dict] = {'image_url': 'resources/glyphs/plus.svg', 'color': 4291611852}
    def __init__(self, model_class = EditableListModel, item_delegate_class = EditableListItemDelegate, setting_path = None, list_height = 100):
        ...
    def on_add_new_entry_button_clicked(self):
        ...
    def on_item_selection_changed(self, items):
        ...
    def on_reset_button_clicked(self):
        ...
    def on_save_button_clicked(self):
        ...
cl: omni.ui.color_utils.ColorShade  # value = <omni.ui.color_utils.ColorShade object>
